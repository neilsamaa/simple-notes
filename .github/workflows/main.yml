name: Docker Build, Push, and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE_TAG: latest
  DOCKER_IMAGE_NAME: simple-notes
  CONTAINER_NAME: simple-notes
  CONTAINER_PORT: 8000:8000
  REGISTRY: ghcr.io

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      #run: docker login -u ${{ github.actor }} -p ${{ secrets.GH_PAT }}
      run: echo ${{ secrets.GH_PAT }} | docker login $REGISTRY -u ${{ github.actor }} --password-stdin

    - name: Build Docker Image
      run: docker build -t $REGISTRY/${{ github.actor }}/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .

    - name: Push Docker Image
      run: docker push $REGISTRY/${{ github.actor }}/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
    
    - name: Logout from Docker Hub
      run: docker logout $REGISTRY
    
    - name: Deploy Container to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        envs: DOCKER_IMAGE_TAG, DOCKER_IMAGE_NAME, CONTAINER_NAME, CONTAINER_PORT, REGISTRY
        script: |
          # Check if Container Exists
          if docker ps -a --format '{{.Names}}' | grep -Eq "^$CONTAINER_NAME$"; then
            echo "Container $CONTAINER_NAME exists, stopping and removing..."
            docker stop $CONTAINER_NAME
            docker rm $CONTAINER_NAME
          fi

          # Login to Docker Hub
          #docker login -u ${{ github.actor }} -p ${{ secrets.DOCKER_PASSWORD }}
          echo ${{ secrets.GH_PAT }} | docker login $REGISTRY -u ${{ github.actor }} --password-stdin

          # Pull Docker Image on Server
          docker pull $REGISTRY/${{ github.actor }}/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

          # Run Docker Container on Server
          docker run -d --name $CONTAINER_NAME -p $CONTAINER_PORT $REGISTRY/${{ github.actor }}/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

          # Logout from Docker Hub
          docker logout $REGISTRY
